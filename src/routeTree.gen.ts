/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ExploreIndexRouteImport } from './routes/explore/index'
import { Route as ExplorePhase2RouteImport } from './routes/explore/phase-2'
import { Route as ExplorePhase1RouteImport } from './routes/explore/phase-1'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExploreIndexRoute = ExploreIndexRouteImport.update({
  id: '/explore/',
  path: '/explore/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExplorePhase2Route = ExplorePhase2RouteImport.update({
  id: '/explore/phase-2',
  path: '/explore/phase-2',
  getParentRoute: () => rootRouteImport,
} as any)
const ExplorePhase1Route = ExplorePhase1RouteImport.update({
  id: '/explore/phase-1',
  path: '/explore/phase-1',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/explore/phase-1': typeof ExplorePhase1Route
  '/explore/phase-2': typeof ExplorePhase2Route
  '/explore': typeof ExploreIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/explore/phase-1': typeof ExplorePhase1Route
  '/explore/phase-2': typeof ExplorePhase2Route
  '/explore': typeof ExploreIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/explore/phase-1': typeof ExplorePhase1Route
  '/explore/phase-2': typeof ExplorePhase2Route
  '/explore/': typeof ExploreIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/explore/phase-1'
    | '/explore/phase-2'
    | '/explore'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/explore/phase-1' | '/explore/phase-2' | '/explore'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/explore/phase-1'
    | '/explore/phase-2'
    | '/explore/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ExplorePhase1Route: typeof ExplorePhase1Route
  ExplorePhase2Route: typeof ExplorePhase2Route
  ExploreIndexRoute: typeof ExploreIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/explore/': {
      id: '/explore/'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof ExploreIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/explore/phase-2': {
      id: '/explore/phase-2'
      path: '/explore/phase-2'
      fullPath: '/explore/phase-2'
      preLoaderRoute: typeof ExplorePhase2RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/explore/phase-1': {
      id: '/explore/phase-1'
      path: '/explore/phase-1'
      fullPath: '/explore/phase-1'
      preLoaderRoute: typeof ExplorePhase1RouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ExplorePhase1Route: ExplorePhase1Route,
  ExplorePhase2Route: ExplorePhase2Route,
  ExploreIndexRoute: ExploreIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
